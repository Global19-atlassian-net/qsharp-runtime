//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

namespace Test
{
    abstract public class UnitArgTarget : SimulatorBase
    {
        public override string Name => "UnitArgTarget";
        public abstract void DoUnitArg()
        {
        }

        public abstract void DoUnitArgCtl(IQArray<Qubit> __ctrls__)
        {
        }

        public class Microsoft_Quantum_UnitArgTarget__UnitArg : Controllable<QVoid>, ICallable
        {
            public Microsoft_Quantum_UnitArgTarget__UnitArg(IOperationFactory m) : base(m)
            {
            }

            String ICallable.Name => "Microsoft_Quantum_UnitArgTarget__UnitArg";
            String ICallable.FullName => "Microsoft.Quantum.UnitArgTarget.UnitArg";
            public override Func<QVoid, QVoid> Body => (__in__) =>
            {
                (this.Factory as UnitArgTarget).DoUnitArg();
                return QVoid.Instance;
            }

            ;
            public override Func<(IQArray<Qubit>,QVoid), QVoid> ControlledBody => (__in__) =>
            {
                var (__ctrls__,(_)) = __in__;
                (this.Factory as UnitArgTarget).DoUnitArgCtl(__ctrls__);
                return QVoid.Instance;
            }

            ;
            public override void Init()
            {
            }

            public override IApplyData __dataIn(QVoid data) => data;
            public override IApplyData __dataOut(QVoid data) => data;
            public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
            {
                return __m__.Run<UnitArg, QVoid, QVoid>(QVoid.Instance);
            }
        }
    }
}